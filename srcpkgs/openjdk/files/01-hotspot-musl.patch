--- globalDefinitions_gcc.hpp	2017-10-14 21:17:34.359728088 +0200
+++ src/share/vm/utilities/globalDefinitions_gcc.hpp	2017-10-14 21:19:41.266731219 +0200
@@ -235,7 +235,11 @@
 #elif defined(__APPLE__)
 inline int g_isnan(double f) { return isnan(f); }
 #elif defined(LINUX) || defined(_ALLBSD_SOURCE)
+#if defined (LINUX) && defined (__GLIBC__)
 inline int g_isnan(float  f) { return isnanf(f); }
+#else
+inline int g_isnan(float f) { return isnan(f); }
+#endif
 inline int g_isnan(double f) { return isnan(f); }
 #else
 #error "missing platform-specific definition here"
--- os_linux.inline.hpp	2017-10-14 21:22:33.708735473 +0200
+++ src/os/linux/vm/os_linux.inline.hpp	2017-10-14 21:23:29.837736858 +0200
@@ -33,7 +33,11 @@
 
 #include <unistd.h>
 #include <sys/socket.h>
+#if defined(__GLIBC__)
 #include <sys/poll.h>
+#else
+#include <poll.h>
+#endif
 #include <netdb.h>
 
 inline void* os::thread_local_storage_at(int index) {
--- jvm_linux.cpp	2017-10-14 21:29:29.400745728 +0200
+++ src/os/linux/vm/jvm_linux.cpp	2017-10-14 21:30:29.635747214 +0200
@@ -154,7 +154,9 @@
 #ifdef SIGSTKFLT
   "STKFLT",     SIGSTKFLT,      /* Stack fault.  */
 #endif
+#ifdef SIGCLD
   "CLD",        SIGCLD,         /* Same as SIGCHLD (System V).  */
+#endif  
   "CHLD",       SIGCHLD,        /* Child status has changed (POSIX).  */
   "CONT",       SIGCONT,        /* Continue (POSIX).  */
   "STOP",       SIGSTOP,        /* Stop, unblockable (POSIX).  */
--- os_linux_x86.cpp	2017-10-14 21:33:39.216751891 +0200
+++ src/os_cpu/linux_x86/vm/os_linux_x86.cpp	2017-10-14 21:36:08.863755583 +0200
@@ -72,7 +72,9 @@
 # include <pwd.h>
 # include <poll.h>
 # include <ucontext.h>
+#if defined (__GLIBC__)
 # include <fpu_control.h>
+#endif
 
 #ifdef AMD64
 #define REG_SP REG_RSP
--- os_linux.cpp	2017-10-14 21:38:11.415758606 +0200
+++ src/os/linux/vm/os_linux.cpp	2017-10-14 22:54:57.463872236 +0200
@@ -94,7 +94,9 @@
 # include <string.h>
 # include <syscall.h>
 # include <sys/sysinfo.h>
+#if defined (__GLIBC__)
 # include <gnu/libc-version.h>
+#endif
 # include <sys/ipc.h>
 # include <sys/shm.h>
 # include <link.h>
@@ -534,6 +536,7 @@
   // and _CS_GNU_LIBPTHREAD_VERSION are supported in glibc >= 2.3.2. Use a
   // generic name for earlier versions.
   // Define macros here so we can build HotSpot on old systems.
+#if defined (__GLIBC__)
 # ifndef _CS_GNU_LIBC_VERSION
 # define _CS_GNU_LIBC_VERSION 2
 # endif
@@ -588,6 +591,13 @@
   if (os::Linux::is_NPTL() || os::Linux::supports_variable_stack_size()) {
      os::Linux::set_is_floating_stack();
   }
+#else
+  //Hard code musl compatible settings (copied from Alpine patches)
+  os::Linux::set_glibc_version("glibc 2.9");
+  os::Linux::set_libpthread_version("NPTL");
+  os::Linux::set_is_NPTL();
+  os::Linux::set_is_floating_stack();
+#endif
 }
 
 /////////////////////////////////////////////////////////////////////////////
@@ -2796,6 +2806,12 @@
 extern "C" JNIEXPORT void numa_error(char *where) { }
 extern "C" JNIEXPORT int fork1() { return fork(); }
 
+#if !defined (__GLIBC__)
+static void *dlvsym(void *handle, const char *name, const char *ver)
+{
+  return dlsym(handle, name);
+}
+#endif
 
 // If we are running with libnuma version > 2, then we should
 // be trying to use symbols with versions 1.1
